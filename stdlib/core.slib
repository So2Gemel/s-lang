module core.slib

// 🧠 معلومات النظام
method systemInfo() {
  string user = shell.exec("whoami");
  string os = shell.exec("uname -a");
  return "User: " + user + "\nOS: " + os;
}

// 🔢 العمليات الرياضية الأساسية
method clamp(int val, int min, int max) {
  if (val < min) return min;
  if (val > max) return max;
  return val;
}

method lerp(float a, float b, float t) {
  return a + (b - a) * t;
}

// 🧪 أدوات فحص وتحليل
method isEven(int x) { return x % 2 == 0; }
method isOdd(int x) { return x % 2 != 0; }
method isPrime(int x) {
  if (x <= 1) return false;
  for (int i = 2; i < x; i++) {
    if (x % i == 0) return false;
  }
  return true;
}

// 🔐 أدوات تشفير بسيطة
method xor(string txt, string key) {
  string out = "";
  for (int i = 0; i < txt.length(); i++) {
    out += chr(ord(txt[i]) ^ ord(key[i % key.length()]));
  }
  return out;
}

// 🧭 أدوات الوقت
method now() {
  return shell.exec("date");
}

method timestamp() {
  return shell.exec("date +%s");
}

// 📂 أدوات الملفات
method readFile(string path) {
  return system.read(path);
}

method writeFile(string path, string data) {
  system.write(path, data);
}

method fileExists(string path) {
  return shell.exec("test -f " + path + " && echo yes || echo no") == "yes";
}

// 🧷 أدوات النظام
method exec(string cmd) {
  return shell.exec(cmd);
}

method hash(string txt) {
  return system.hash(txt);
}

// 🧠 أدوات منطقية
method matchCase(string input, map<string, function> cases) {
  if (cases.contains(input)) {
    cases[input]();
  } else if (cases.contains("else")) {
    cases["else"]();
  }
}

// 🧩 أدوات تحويل
method toInt(string s) { return int(s); }
method toFloat(string s) { return float(s); }
method toBool(string s) { return s == "true"; }
